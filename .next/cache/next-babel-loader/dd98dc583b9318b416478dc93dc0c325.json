{"ast":null,"code":"var _jsxFileName = \"/home/alandouglas/Desktop/pluralsight/myapphooks/src/ImageTogglerOnScroll.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\n\nconst ImageTogglerOnScroll = ({\n  primaryImg,\n  secondaryImg\n}) => {\n  const imageRef = useRef(null);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollHandler);\n    setInView(isInView());\n    setIsLoading(false);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    }, [isLoading];\n  });\n  const {\n    0: inView,\n    1: setInView\n  } = useState(false);\n\n  const isInView = () => {\n    if (imageRef.current) {\n      const rect = imageRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    return false;\n  };\n\n  const scrollHandler = () => {\n    setInView(() => {\n      return isInView();\n    });\n  };\n\n  return isLoading ? null : __jsx(\"img\", {\n    src: inView ? secondaryImg : primaryImg,\n    alt: \"\",\n    ref: imageRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default ImageTogglerOnScroll;","map":{"version":3,"sources":["/home/alandouglas/Desktop/pluralsight/myapphooks/src/ImageTogglerOnScroll.js"],"names":["React","useRef","useEffect","useState","ImageTogglerOnScroll","primaryImg","secondaryImg","imageRef","isLoading","setIsLoading","window","addEventListener","scrollHandler","setInView","isInView","removeEventListener","inView","current","rect","getBoundingClientRect","top","bottom","innerHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA;AAAb,CAAD,KAA+B;AACxD,QAAMC,QAAQ,GAAEN,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM;AAAA,OAACO,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVQ,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACAC,IAAAA,SAAS,CAACC,QAAQ,EAAT,CAAT;AACAL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,WAAO,MAAI;AACPC,MAAAA,MAAM,CAACK,mBAAP,CAA2B,QAA3B,EAAqCH,aAArC;AACH,KAFM,EAEL,CAACJ,SAAD,CAFF;AAGH,GAPQ,CAAT;AASA,QAAK;AAAA,OAACQ,MAAD;AAAA,OAASH;AAAT,MAAsBV,QAAQ,CAAC,KAAD,CAAnC;;AAEA,QAAMW,QAAQ,GAAG,MAAM;AACnB,QAAGP,QAAQ,CAACU,OAAZ,EAAoB;AAChB,YAAMC,IAAI,GAAGX,QAAQ,CAACU,OAAT,CAAiBE,qBAAjB,EAAb;AACA,aAAOD,IAAI,CAACE,GAAL,IAAW,CAAX,IAAgBF,IAAI,CAACG,MAAL,IAAeX,MAAM,CAACY,WAA7C;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAQA,QAAMV,aAAa,GAAG,MAAK;AACvBC,IAAAA,SAAS,CAAC,MAAI;AACV,aAAOC,QAAQ,EAAf;AACH,KAFQ,CAAT;AAGH,GAJD;;AAMA,SAAON,SAAS,GAAG,IAAH,GACZ;AACI,IAAA,GAAG,EAAEQ,MAAM,GAAGV,YAAH,GAAkBD,UADjC;AAEI,IAAA,GAAG,EAAC,EAFR;AAEW,IAAA,GAAG,EAAEE,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMH,CAnCD;;AAqCA,eAAeH,oBAAf","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\n\nconst ImageTogglerOnScroll = ({primaryImg, secondaryImg}) =>{\n    const imageRef= useRef(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(()=>{\n        window.addEventListener(\"scroll\", scrollHandler);\n        setInView(isInView());\n        setIsLoading(false);\n        return(()=>{\n            window.removeEventListener(\"scroll\", scrollHandler);\n        },[isLoading]);\n    });\n\n    const[inView, setInView] = useState(false);\n\n    const isInView = () => {\n        if(imageRef.current){\n            const rect = imageRef.current.getBoundingClientRect();\n            return rect.top >=0 && rect.bottom <= window.innerHeight;\n        }\n        return false;\n    };\n\n    const scrollHandler = () =>{\n        setInView(()=>{\n            return isInView();\n        });\n    };\n\n    return isLoading ? null : (\n        <img \n            src={inView ? secondaryImg : primaryImg}\n            alt='' ref={imageRef}\n        />\n    );\n};\n\nexport default ImageTogglerOnScroll;"]},"metadata":{},"sourceType":"module"}